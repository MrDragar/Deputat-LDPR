SYSTEM_ROLES = ["Депутат", "Координатор", "Админ"]

REGIONS = [
    "Алтайский край", "Амурская область", "Архангельская область", "Астраханская область",
    "Белгородская область", "Брянская область", "Владимирская область", "Волгоградская область",
    "Вологодская область", "Воронежская область", "Донецкая Народная Республика", "Еврейская автономная область",
    "Забайкальский край", "Запорожская область", "Ивановская область", "Иркутская область",
    "Кабардино-Балкарская Республика", "Калининградская область", "Калужская область", "Камчатский край",
    "Карачаево-Черкесская Республика", "Кемеровская область – Кузбасс", "Кировская область", "Костромская область",
    "Краснодарский край", "Красноярский край", "Курганская область", "Курская область",
    "Ленинградская область", "Липецкая область", "Луганская Народная Республика", "Магаданская область",
    "Москва", "Московская область", "Мурманская область", "Ненецкий автономный округ",
    "Нижегородская область", "Новгородская область", "Новосибирская область", "Омская область",
    "Оренбургская область", "Орловская область", "Пензенская область", "Пермский край",
    "Приморский край", "Псковская область", "Республика Адыгея", "Республика Алтай",
    "Республика Башкортостан", "Республика Бурятия", "Республика Дагестан", "Республика Ингушетия",
    "Республика Калмыкия", "Республика Карелия", "Республика Коми", "Республика Крым",
    "Республика Марий Эл", "Республика Мордовия", "Республика Саха (Якутия)", "Республика Северная Осетия – Алания",
    "Республика Татарстан", "Республика Тыва", "Республика Хакасия", "Ростовская область",
    "Рязанская область", "Самарская область", "Санкт-Петербург", "Саратовская область",
    "Сахалинская область", "Свердловская область", "Севастополь", "Смоленская область",
    "Ставропольский край", "Тамбовская область", "Тверская область", "Томская область",
    "Тульская область", "Тюменская область", "Удмуртская Республика", "Ульяновская область",
    "Хабаровский край", "Ханты-Мансийский автономный округ-Югра", "Херсонская область", "Челябинская область",
    "Чеченская Республика", "Чувашская Республика", "Чукотский автономный округ", "Ямало-Ненецкий автономный округ",
    "Ярославская область"
]

EDUCATION_LEVELS = [
    "Среднее общее",
    "Среднее профессиональное",
    "Высшее",
]

REPRESENTATIVE_BODY_LEVELS = [
    "Совет Федерации Федерального собрания Российской Федерации",
    "Государственная дума Федерального собрания Российской Федерации",
    "ЗС",
    "АЦС",
    "МСУ"
]

COMMITTEE_STATUSES = [
    "Член",
    "Председатель",
    "Заместитель",
]

FOREIGN_LANGUAGES = [
    "Английский", "Немецкий", "Французский", "Испанский", "Китайский", "Арабский", "Японский",
    "Итальянский", "Португальский", "Корейский", "Турецкий", "Хинди"
]

RUSSIAN_FEDERATION_LANGUAGES = [
    "Татарский", "Башкирский", "Чеченский", "Чувашский", "Якутский", "Осетинский", "Бурятский",
    "Аварский", "Даргинский", "Лакский", "Лезгинский", "Ингушский", "Кабардино-черкесский", 
    "Балкарский", "Калмыцкий", "Карачаевский", "Ногайский", "Адыгейский", "Коми", "Марийский", 
    "Мордовский (мокшанский, эрзянский)", "Удмуртский", "Тувинский", "Алтайский", "Хакасский", 
    "Крымскотатарский"
]

LANGUAGE_LEVELS = [
    "Читаю и перевожу со словарем",
    "Читаю и могу объясняться",
    "Свободно владею"
]

POSTGRADUATE_TYPES = [
    "Аспирантура",
    "Адъюнктура",
    "Докторантура"
]

DEGREE_TYPES = [
    "Кандидат наук",
    "Доктор наук",
]

TITLE_TYPES = [
    "Доцент",
    "Профессор",
]

GENDER_CHOICES = [
    ("Мужчина", "Мужчина"),
    ("Женщина", "Женщина"),
]

MARITAL_STATUS_MALE = [
    ("Женат", "Женат"),
    ("Холост", "Холост"),
]

MARITAL_STATUS_FEMALE = [
    ("Замужем", "Замужем"),
    ("Не замужем", "Не замужем"),
]

# Combined for model, validation can handle specific gender logic
# Sort and create (value, display_name) tuples
MARITAL_STATUS_CHOICES = sorted(list(set([choice[0] for choice in MARITAL_STATUS_MALE] + [choice[0] for choice in MARITAL_STATUS_FEMALE])))
MARITAL_STATUS_CHOICES = [(c, c) for c in MARITAL_STATUS_CHOICES]

HAS_CHOICES = [('Да', 'Да'), ('Нет', 'Нет')]


def make_choices_from_list(data_list):
    return [(item, item) for item in data_list]
