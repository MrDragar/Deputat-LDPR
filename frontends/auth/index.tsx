import React from 'react';
import ReactDOM from 'react-dom/client';
import { BrowserRouter, Routes, Route, Link, useLocation, Navigate } from 'react-router-dom';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞–ø—Ä—è–º—É—é
import LoginPage from './components/LoginPage';
import DashboardPage from './components/DashboardPage';
import DetailPage from './components/DetailPage';

// Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const generateMockForms = (count: number) => {
  const mockForms = [];
  const names = [
    { first: '–ò–≤–∞–Ω', last: '–ü–µ—Ç—Ä–æ–≤', middle: '–°–µ—Ä–≥–µ–µ–≤–∏—á' },
    { first: '–ú–∞—Ä–∏—è', last: '–°–∏–¥–æ—Ä–æ–≤–∞', middle: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞' },
    { first: '–ê–ª–µ–∫—Å–µ–π', last: '–ö–æ–∑–ª–æ–≤', middle: '–î–º–∏—Ç—Ä–∏–µ–≤–∏—á' },
    { first: '–ï–ª–µ–Ω–∞', last: '–ù–∏–∫–æ–ª–∞–µ–≤–∞', middle: '–í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞' },
    { first: '–î–º–∏—Ç—Ä–∏–π', last: '–û—Ä–ª–æ–≤', middle: '–ü–∞–≤–ª–æ–≤–∏—á' },
  ];

  const regions = ['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '–ö–∞–∑–∞–Ω—å'];
  const spheres = ['IT', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–ú–µ–¥–∏—Ü–∏–Ω–∞', '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ', '–¢–æ—Ä–≥–æ–≤–ª—è'];

  for (let i = 0; i < count; i++) {
    const name = names[i % names.length];
    mockForms.push({
      user: i + 1,
      firstName: name.first,
      lastName: name.last,
      middleName: name.middle,
      region: regions[i % regions.length],
      birthDate: `199${i % 10}-0${(i % 9) + 1}-${(i % 28) + 1}`,
      gender: i % 2 === 0 ? '–ú—É–∂—Å–∫–æ–π' : '–ñ–µ–Ω—Å–∫–∏–π',
      maritalStatus: i % 3 === 0 ? '–ñ–µ–Ω–∞—Ç/–ó–∞–º—É–∂–µ–º' : '–•–æ–ª–æ—Å—Ç/–ù–µ –∑–∞–º—É–∂–µ–º',
      phone: `+7 (999) 000-00-${i.toString().padStart(2, '0')}`,
      email: `user${i + 1}@example.com`,
      vkPage: `https://vk.com/user${i + 1}`,
      vkGroup: `https://vk.com/club${i + 1}`,
      telegramChannel: `@user${i + 1}`,
      personalSite: i % 4 === 0 ? `https://user${i + 1}.com` : undefined,
      partyExperience: (5 + i).toString(),
      partyPosition: ['–ê–∫—Ç–∏–≤–∏—Å—Ç', '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä', '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å'][i % 3],
      partyRole: ['–í–æ–ª–æ–Ω—Ç–µ—Ä', '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä', '–ö—É—Ä–∞—Ç–æ—Ä'][i % 3],
      representativeBodyName: ['–ì–æ—Ä–æ–¥—Å–∫–∞—è –¥—É–º–∞', '–ó–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ', '–°–æ–≤–µ—Ç –¥–µ–ø—É—Ç–∞—Ç–æ–≤'][i % 3],
      representativeBodyLevel: ['–ú—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω—ã–π', '–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π', '–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π'][i % 3],
      representativeBodyPosition: ['–î–µ–ø—É—Ç–∞—Ç', '–°–æ–≤–µ—Ç–Ω–∏–∫', '–ü–æ–º–æ—â–Ω–∏–∫'][i % 3],
      committeeName: ['–ë—é–¥–∂–µ—Ç–Ω—ã–π –∫–æ–º–∏—Ç–µ—Ç', '–°–æ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–º–∏—Ç–µ—Ç', '–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∫–æ–º–∏—Ç–µ—Ç'][i % 3],
      committeeStatus: ['–ß–ª–µ–Ω', '–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å', '–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å'][i % 3],
      professionalSphere: [spheres[i % spheres.length], spheres[(i + 1) % spheres.length]],
      sports: ['–§—É—Ç–±–æ–ª', '–•–æ–∫–∫–µ–π', '–¢–µ–Ω–Ω–∏—Å'].slice(0, (i % 3) + 1),
      hobbies: ['–ß—Ç–µ–Ω–∏–µ', '–ú—É–∑—ã–∫–∞', '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è'].slice(0, (i % 3) + 1),
      recreation: ['–û—Ç–¥—ã—Ö –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ', '–ö–∏–Ω–æ', '–†–µ—Å—Ç–æ—Ä–∞–Ω—ã'].slice(0, (i % 3) + 1),
      awards: i % 4 === 0 ? '–ì—Ä–∞–º–æ—Ç–∞ –∑–∞ –∞–∫—Ç–∏–≤–Ω—É—é —Ä–∞–±–æ—Ç—É' : undefined,
      superpower: i % 3 === 0 ? '–ë—ã—Å—Ç—Ä–æ–µ –æ–±—É—á–µ–Ω–∏–µ' : undefined,
      talents: i % 2 === 0 ? '–ò–≥—Ä–∞ –Ω–∞ –≥–∏—Ç–∞—Ä–µ' : undefined,
      education: [
        {
          id: 1,
          level: '–í—ã—Å—à–µ–µ',
          organization: '–ú–ì–£ –∏–º. –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞',
          hasDegree: '–î–∞',
          degreeType: '–ë–∞–∫–∞–ª–∞–≤—Ä',
          hasTitle: '–ù–µ—Ç',
          titleType: ''
        }
      ],
      createdAt: new Date(Date.now() - i * 86400000).toISOString()
    });
  }
  return mockForms;
};

const MOCK_FORMS = generateMockForms(8);

// Mock API service –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const mockApi = {
  login: async (username: string, password: string) => {
    console.log('Mock API login called with:', username, password);
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    const mockToken = btoa(JSON.stringify({
      login: username,
      role: 'admin',
      exp: Date.now() + 24 * 60 * 60 * 1000
    }));
    
    const mockResponse = {
      access: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.${mockToken}.signature`
    };
    
    localStorage.setItem('authToken', mockResponse.access);
    window.dispatchEvent(new Event('storage'));
    
    return mockResponse;
  },
  
  logout: () => {
    console.log('Mock API logout called');
    localStorage.removeItem('authToken');
    window.dispatchEvent(new Event('storage'));
  },

  getForms: async () => {
    await new Promise(resolve => setTimeout(resolve, 500));
    return MOCK_FORMS;
  },

  getFormById: async (id: string) => {
    await new Promise(resolve => setTimeout(resolve, 300));
    const form = MOCK_FORMS.find(f => f.user.toString() === id);
    if (!form) throw new Error('Form not found');
    return form;
  },

  processForm: async (id: number, status: boolean, message: string) => {
    await new Promise(resolve => setTimeout(resolve, 1000));
    console.log(`Processing form ${id}: ${status ? 'approved' : 'declined'} - ${message}`);
    return { success: true };
  }
};

// –°–æ–∑–¥–∞–µ–º Auth Context –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏
const AuthContext = React.createContext<any>(null);

export const useAuth = () => {
  const context = React.useContext(AuthContext);
  if (!context) {
    throw new Error('useAuth must be used within an AuthProvider');
  }
  return context;
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞—â–∏—Ç—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤
const ProtectedRoute: React.FC<{ children: React.ReactElement }> = ({ children }) => {
  const { isAuthenticated } = useAuth();
  return isAuthenticated ? children : <Navigate to="/gallery/login" replace />;
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≥–∞–ª–µ—Ä–µ–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
const DevGallery: React.FC = () => {
  const location = useLocation();
  
  const components = [
    { path: '/gallery/login', name: 'Login Page', description: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É' },
    { path: '/gallery/dashboard', name: 'Dashboard Page', description: '–î–∞—à–±–æ—Ä–¥ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞—è–≤–æ–∫' },
    { path: '/gallery/detail/1', name: 'Detail Page (–ó–∞—è–≤–∫–∞ 1)', description: '–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞—è–≤–∫–∏' },
    { path: '/gallery/detail/2', name: 'Detail Page (–ó–∞—è–≤–∫–∞ 2)', description: '–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –¥—Ä—É–≥–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏' }
  ];

  // –ï—Å–ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
  if (location.pathname !== '/gallery' && location.pathname.startsWith('/gallery')) {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white border-b border-gray-200 p-4">
          <div className="max-w-6xl mx-auto flex items-center justify-between">
            <Link 
              to="/gallery"
              className="flex items-center text-blue-600 hover:text-blue-800 font-medium"
            >
              ‚Üê –ù–∞–∑–∞–¥ –∫ –≥–∞–ª–µ—Ä–µ–µ
            </Link>
            <span className="text-sm text-gray-500">–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</span>
          </div>
        </div>
        {/* –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —á–µ—Ä–µ–∑ Routes */}
      </div>
    );
  }

  // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≥–∞–ª–µ—Ä–µ–∏
  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-6xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">üé® –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h1>
          <p className="text-gray-600">–ì–∞–ª–µ—Ä–µ—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
          {components.map((component) => (
            <Link
              key={component.path}
              to={component.path}
              className="block bg-white border border-gray-200 rounded-lg p-6 hover:shadow-lg transition-shadow duration-200"
            >
              <h3 className="text-lg font-semibold text-gray-900 mb-2">{component.name}</h3>
              <p className="text-gray-600 text-sm">{component.description}</p>
              <div className="mt-4 text-blue-600 text-sm font-medium">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å ‚Üí</div>
            </Link>
          ))}
        </div>

        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <h4 className="text-yellow-800 font-semibold mb-2">‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</h4>
          <ul className="text-yellow-700 text-sm list-disc list-inside space-y-1">
            <li>–í—Å–µ –¥–∞–Ω–Ω—ã–µ —è–≤–ª—è—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
            <li>–î–ª—è –≤—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—é–±—ã–µ –¥–∞–Ω–Ω—ã–µ (username/password)</li>
            <li>–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏</li>
            <li>–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –≥–∞–ª–µ—Ä–µ–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ <Link to="/auth" className="underline">–æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</Link></li>
          </ul>
        </div>
      </div>
    </div>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏
const GalleryApp: React.FC = () => {
  const [isAuthenticated, setIsAuthenticated] = React.useState<boolean>(
    !!localStorage.getItem('authToken')
  );

  React.useEffect(() => {
    const syncAuth = () => {
      const token = localStorage.getItem('authToken');
      setIsAuthenticated(!!token);
    };

    window.addEventListener('storage', syncAuth);
    return () => window.removeEventListener('storage', syncAuth);
  }, []);

  const login = async (username: string, password: string) => {
    try {
      await mockApi.login(username, password);
      setIsAuthenticated(true);
    } catch (error) {
      console.error('Login failed:', error);
      // –î–ª—è –¥–µ–º–æ purposes, –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –∏–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –ª–æ–≥–∏–Ω
      await mockApi.login(username, password);
      setIsAuthenticated(true);
    }
  };

  const logout = () => {
    mockApi.logout();
    setIsAuthenticated(false);
  };

  return (
    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>
      <Routes>
        {/* –ú–∞—Ä—à—Ä—É—Ç—ã –≥–∞–ª–µ—Ä–µ–∏ */}
        <Route path="/gallery" element={<DevGallery />} />
        <Route path="/gallery/login" element={<LoginPage />} />
        <Route 
          path="/gallery/dashboard" 
          element={
            <ProtectedRoute>
              <DashboardPage />
            </ProtectedRoute>
          } 
        />
        <Route 
          path="/gallery/detail/:id" 
          element={
            <ProtectedRoute>
              <DetailPage />
            </ProtectedRoute>
          } 
        />
        
        {/* –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –∫–æ—Ä–Ω—è –Ω–∞ –≥–∞–ª–µ—Ä–µ—é –≤ dev —Ä–µ–∂–∏–º–µ */}
        <Route path="/" element={<Navigate to="/gallery" replace />} />
        
        {/* Fallback route */}
        <Route path="*" element={<Navigate to="/gallery" replace />} />
      </Routes>
    </AuthContext.Provider>
  );
};

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º API –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è mock –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
if (import.meta.env.DEV) {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º mock API –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
  (window as any).__MOCK_API__ = mockApi;
}

const rootElement = document.getElementById('root');
if (!rootElement) {
  throw new Error("Could not find root element to mount to");
}

const root = ReactDOM.createRoot(rootElement);
root.render(
  <React.StrictMode>
    <BrowserRouter>
      <GalleryApp />
    </BrowserRouter>
  </React.StrictMode>
);
